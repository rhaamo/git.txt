// Code generated by go-bindata.
// sources:
// conf/app.ini
// conf/locale/locale_en-US.ini
// conf/locale/locale_fr-FR.ini
// DO NOT EDIT!

package bindata

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _confAppIni = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x58\xdd\x72\xdb\xb8\x92\xbe\xc7\x53\x74\xb4\x35\x3b\xc9\x96\x2c\x3b\x4e\xe2\x78\xec\x78\x2a\xb4\x44\xd9\xdc\xe8\xc7\x21\xa9\x24\xde\x54\x8a\x81\xc9\x96\x84\x35\x08\x30\x00\x68\x5b\x7b\xb1\xaf\xb3\x0f\xb2\x2f\x76\xaa\x41\x52\x96\x93\xa9\x3a\x73\x71\x92\x2a\xcb\x06\xba\x1b\xdd\x5f\xff\x2b\xb8\xba\xca\x66\xc1\x34\x84\x33\x58\x09\x37\x70\x0f\x8e\x0d\x83\x59\x16\x87\x17\x51\x92\x86\x31\x9c\x81\x33\x35\xb2\x60\x36\x9f\x5d\x4f\xe7\x8b\x24\x1b\xc6\x61\x90\x86\xdd\xf9\x29\x84\xc2\xad\xd1\x40\xaf\xc0\xbb\x5e\x1f\x7a\x95\xd1\x45\x0f\xb4\x81\x9e\x43\xeb\x7a\x2c\x5e\xcc\xb2\xe9\x7c\x44\x0c\x05\xde\x31\xf6\xd5\xa2\xb9\x43\xf3\x8d\x5d\xc5\xf3\x74\x3e\x9c\x4f\xe0\x0c\xd6\xce\x55\x6c\x34\x9f\x06\xd1\x0c\xce\x40\xea\x9c\xcb\xb5\xb6\x8e\xc5\xf3\x79\x9a\x2d\x62\x22\xf9\xed\x79\x47\xff\xc2\x9e\xec\xef\xff\xf6\xbc\x21\x7f\x61\x4f\x7e\x7b\x7e\x99\xa6\x57\xd9\xd5\x3c\x4e\x5f\xd8\x7d\xb6\x98\x45\x5f\xb2\x64\x3e\xfc\x10\xa6\xd9\x55\x18\x4f\xa3\x24\x89\xe6\x24\xf6\xe8\xe8\x88\x79\xca\x60\x34\x22\xb3\x0e\x06\xfe\x3f\xdb\x72\xc3\x19\xbc\x3e\x38\x38\x60\xa3\x28\x09\xce\x27\x61\x16\xcf\x17\x69\x18\x67\x93\xf9\x05\x9c\xc1\x92\x4b\x4b\xd6\x2e\xaa\x0a\x0d\x48\xbc\x43\x09\x7a\x09\x0e\xcb\x4a\x72\x87\xc0\x55\x01\xd6\x71\x27\x72\x58\x0a\x89\x50\x71\xb7\x66\xa7\x50\xe0\x92\xd7\xd2\x81\xb0\xe0\xd6\xcd\x29\xdc\xaf\xd1\x60\x07\x36\xdd\xe0\x03\xe6\xb5\xc3\x82\x25\x69\x90\x46\xc3\xcc\x9b\x7d\x15\xa4\x97\x70\xc6\xd8\xd7\x82\x3b\x7e\xc3\x2d\x7e\xdb\xc1\xba\xdc\xd8\x1f\xd2\xa3\xad\xad\x5b\x19\xb4\x0d\xe2\xf6\x87\x14\x0e\x5f\xf5\xfa\xb0\xd1\x35\xe4\x5c\x41\xae\x95\xc2\xdc\x81\xd3\x90\x8a\xd1\x39\xdc\x0b\xb7\x86\xe9\x26\xf9\x38\x81\xca\x68\xa7\x73\x2d\xd9\xe8\x3c\x4b\xaf\xaf\xc8\x41\x2d\x3f\xbb\x9c\x27\x84\xc6\xcb\xc3\xb7\x1e\xa3\x97\x27\xaf\x5e\x1d\x1c\xb1\x2e\x4a\xf4\xca\xb2\x45\xe2\x43\xc3\x68\xed\xd8\x55\x90\x24\x9f\x47\x70\xc6\x4e\x61\x4c\x5a\xec\xe8\xa4\xe4\xa6\x0f\xd8\x05\x88\xb0\xfc\x46\x22\xa9\x6d\xf0\x47\x2d\x0c\x36\x5a\xdf\xa1\x11\xcb\xcd\xde\xb2\x96\xb2\xc7\x92\x64\xb2\x0d\x97\x86\xbe\x13\xdb\x19\xe7\xa1\xee\x39\x51\xdc\xf4\xfa\x50\x5b\x04\x7e\x63\xb5\xac\xdd\x23\xba\xca\x9b\x6f\x1d\x37\x0e\xb8\x05\x0a\x38\x91\x23\x6b\x10\xed\x80\x1f\x14\x37\x8c\x7d\x35\x58\x69\x2b\x9c\x36\x1b\x82\x37\xd6\xda\x35\x52\x96\xda\x80\x75\xda\x08\xb5\x82\x2d\x8d\x40\xfb\xbb\x05\xf2\x47\x7f\xd7\xb1\xbd\xff\xdd\x7f\x57\x5b\x34\x8a\x97\xf8\xe7\xfe\x4a\xb8\x07\xb7\xb7\xcb\xd3\xf3\x71\xec\xf1\x89\x96\x5e\xb5\x7b\xae\xbc\x4b\x5a\x0b\x21\x97\x5a\xd1\x4b\xb5\xa5\x9f\x14\x90\xdb\x20\xf4\xd1\x79\x11\xa5\x3b\x21\x78\xdd\xfa\xd6\x56\x98\x8b\xe5\x06\x08\xb8\x46\x6b\xa7\xc9\x3a\x10\x4b\x50\x5a\xed\x59\xc7\x55\xc1\x4d\xc1\x4e\xe1\x42\x38\xb8\x11\x8a\x9b\x0d\x29\x4c\x6e\x21\xe4\x0a\x6f\x26\xbd\xe0\xd9\xea\x4a\x6a\x5e\xec\x55\x3c\xbf\x85\xe7\xf9\x1a\xf3\x5b\x5d\x3b\xd0\x77\xd8\xd0\xbc\x60\x17\x51\x9a\x9d\x47\xb3\x20\xbe\x6e\x60\x64\xec\xab\xd4\xab\x6f\xec\x49\xbc\x9e\xc2\x90\x2b\xb8\x41\xe8\xe5\x5a\x59\x2d\xb1\x75\x18\x65\x45\xef\x29\x6e\x1d\x01\xa5\x95\x45\xc8\x75\x59\x72\xb2\xc1\x62\xc5\x0d\x25\x55\x59\x4b\x27\x2a\x89\x50\xea\x02\x6d\x1f\x70\xb0\x1a\x6c\xd9\xfa\x3e\xd1\x7a\xac\x8d\x96\xf6\x94\x9d\xc2\x79\xbd\x5c\xfa\x1c\x55\x2b\xb7\xa6\x24\xcd\xd7\x5c\x29\x94\x7d\xb8\x45\xac\x40\xf8\xa0\x10\x5e\x05\xd1\xf8\xa3\xd0\xea\x77\x07\xb7\x4a\xdf\xc3\xfd\x9a\xbb\xe6\x72\xc0\xce\x17\xe3\x31\x15\x80\x90\xca\xc7\xcb\x83\x83\x9d\x04\x4c\x0d\xcf\x7d\x24\x47\x6a\xa9\xe9\xf3\x33\x37\x8a\x3e\x43\x63\xb4\xa1\x5f\xc6\xdc\x71\xf9\x93\xc1\x0d\x17\x9b\x84\x9f\x42\xaa\x69\xfe\x4f\xd6\xc5\xf7\x16\x2e\x32\xd6\xfb\xc8\xc3\x3b\x68\xcf\x29\x3e\x25\xf2\x3b\x04\x2c\x2b\xb7\x21\x9c\x84\x5a\xa3\x11\xae\x93\xb7\x95\xe4\x71\xf9\x59\x0c\x1d\xfe\x0d\x19\xa7\x90\xae\xa9\x24\x29\x0a\x4c\x0b\xbc\x76\xba\xe4\x0e\x0b\x90\x7a\x05\x46\x3b\x72\xcb\x73\x7b\x2f\x5c\xee\xa1\x5d\x6a\x29\xf5\x3d\x45\xad\xae\x9c\xd0\xca\xbe\x60\x93\xf9\x45\x16\xcf\xd3\x27\x3d\x22\xc1\x55\x89\xca\x79\x21\x05\x17\x72\xc3\x46\x41\x34\xb9\xfe\x85\x6e\xca\x1f\xc0\x8a\xff\x41\xb0\x6b\xb1\x74\xf4\x00\x65\x84\x44\xef\xea\x27\x58\x1e\x1e\x43\x89\x5c\x59\x78\x09\xef\xde\xc1\xe1\x71\x1f\x0e\xdf\x1c\x4d\xcf\xd9\x34\xf8\x92\x25\xd1\x7f\x85\x59\x72\x19\x8d\x29\x6b\x0e\x8f\x5b\xb9\x52\x28\x04\x55\x97\x37\x68\x7e\x12\xec\x99\x26\xd1\x2c\x4c\x1a\x3f\xd3\x3f\xf2\xf5\x43\x25\x0c\x16\x50\xf0\x8d\x25\x0e\x52\xde\xd7\xf6\xe7\x05\x4a\xa4\x9a\xbf\x74\x68\xa0\xe4\x0f\x9e\xe4\x85\x17\x33\x0a\xae\x49\xca\xdb\xad\x33\xac\xe4\xf9\xed\x2f\xde\xf0\xa7\x7f\xcb\x1d\x9f\xf1\x66\xad\xf5\x2d\x2c\xe2\x09\xf3\xad\xb0\xc9\xba\xc1\x83\x36\xa5\x6f\x09\xde\x53\x8d\x62\xde\x3f\x42\x2b\xf6\x33\xae\x71\xe3\x38\xbc\x43\xb3\x21\x65\x5b\x82\xcc\x7b\xe1\x17\x32\xad\xf2\x56\xa0\xf7\x05\x3e\xe4\x68\x2d\x5a\x78\x80\x1d\x80\xb7\x29\x31\xe5\x0f\xa2\xac\xcb\x06\x26\xa7\x9b\x24\x93\x7a\xb5\x42\xe3\x85\xd8\x5d\x5c\x5e\xf9\x01\xc0\x5a\xa1\xd5\x93\x7e\x86\xa5\x36\x1b\x4a\x9b\xb6\x4c\x10\x72\x06\x0b\x61\x7f\xca\xa0\x96\x90\x86\x87\x4f\xd1\xc8\xf7\x20\xef\xc1\x53\xb8\x32\xfa\x4e\x14\x68\xa8\x10\x2c\xc5\x36\x1e\xd9\x29\x34\x3c\x27\xa0\xb4\x83\x35\xa1\xcd\xd5\xa6\xa3\xda\xa0\x63\xa7\x5e\xc4\x09\xb4\x7a\x3d\xf6\xef\xb6\xe0\x7c\xa7\x8a\xbf\xdf\xde\xda\xef\xec\x14\xbc\x66\x27\xa0\xd0\xdd\x6b\x73\x7b\xe6\xf2\xaa\xcf\x8b\xc2\x9c\x9d\x1c\xbd\x7a\xfb\x47\xbf\xe2\xd6\xde\x6b\x53\x9c\x95\x3c\xe7\x46\xab\x7e\x71\x73\x76\xd0\xaf\xb4\x96\x19\xe1\x79\xf6\xf2\xe0\xa0\x2f\x0a\x89\x99\x13\x25\xea\xda\x9d\xbd\x3c\x26\x1c\x7d\x4f\x3f\x81\x95\xde\xb3\x3f\xe4\x5e\x61\xc4\x1d\x9a\x7d\x7f\x08\x85\x55\x9d\xc2\xd6\x51\x4f\xea\x34\xa3\xfe\x7b\xd2\xbd\xf7\xbe\xd3\x31\x73\x14\x12\xdf\xb7\x20\x65\xc3\xf9\x6c\x1c\xd1\x14\xf3\xc4\x12\x9f\x97\x8d\xc9\xb9\xd6\xb7\x02\x81\x3a\x18\x1b\xce\xe7\x1f\xa2\xb0\x9b\x09\x45\x26\xc5\x2d\x66\x95\x56\x02\xed\x63\x07\xa3\xbe\xdb\xe1\x25\x94\x1f\xe0\x6c\xdb\xee\x77\xdc\xd5\x74\xac\x56\x60\x12\x0e\x17\x71\xb8\xd3\xc7\xda\xc8\xb5\xe8\xda\xf7\x9f\xf0\xfa\x90\x0c\x67\xbe\x09\x26\x61\x9a\x35\x52\x76\x4b\x4a\xf3\xfa\xc5\x10\x08\x47\x10\xca\xa1\xb9\xe3\xf2\x89\x90\x57\x47\x07\x07\xec\x62\x98\x45\xb3\x34\x8c\x3f\x05\x93\x2c\x8d\xbc\x55\xfe\xfc\x51\x86\x14\x4b\xf4\x52\x9e\x30\x1f\x1f\xbd\x3e\x38\x60\x49\xe8\x07\xc8\x6c\x12\x8d\xc3\x8e\xbd\xb9\x39\x85\xe1\x23\x6c\xbe\x95\x0e\x93\x78\xcc\xe8\x47\xf6\x14\xc4\x2c\xb7\x66\xe9\x23\x3f\xaf\x8d\x70\x7e\xd6\x78\xf6\x6c\x78\x19\xcc\x2e\x42\x48\x2f\xa3\x04\xd2\x39\x7c\x08\xc3\x2b\xb8\x9e\x2f\x62\xf0\xc3\xd5\x28\x48\x03\x48\x82\x71\xf8\xec\x19\x4b\xc2\x61\x1c\xa6\xd9\x87\x90\x72\xf5\xd9\xbf\xbd\x1f\x8f\xc2\xcf\x71\xf8\x39\xfe\xf7\xff\x78\xce\xa2\x59\x92\x06\x93\x49\x36\x99\x0f\x3f\xec\x80\x1b\xd4\x4e\xef\x49\xbd\x12\x0a\x0c\x96\xe8\xab\x1e\x65\x28\x95\xe7\x88\xc6\xfb\x69\x38\x3d\x0f\xe3\xc7\x7a\xd5\x6a\x4c\x6f\x3f\xae\x03\x0f\x2e\xcb\x51\xa2\x75\x82\x77\x04\x5b\xce\x27\x54\xb2\x56\xfc\x9f\x39\xda\x77\xf6\xce\xd7\x4d\xb1\x2b\x44\x4e\x05\x87\xa6\x27\x68\x94\xa5\x19\xba\xb6\x9d\xe3\x1b\x65\x69\x2c\xa6\xc5\xa3\x8b\x80\x46\xee\x5f\xdc\x75\x3a\x79\x51\x59\x2b\x8a\x7d\x15\x2f\x8f\xd5\x37\x36\x09\x66\x17\x64\x2a\xaa\xbd\x45\xd2\x5f\x9a\xbd\x71\xec\x47\x5a\x3a\x0b\xd5\x4a\x0a\xbb\xee\x8f\x0d\x57\xff\xff\x7f\x5c\x10\x57\x6e\xda\x1a\xd5\x68\x6f\x6a\xe5\x67\x34\x3a\x06\xc7\xed\xad\x85\x0a\x8d\xd0\x64\x82\x94\x9b\x41\xab\xf2\x68\xa7\x9a\xd6\x6a\x97\xda\x0f\xa6\x17\x84\x56\x33\x9a\xda\x81\xdf\x8d\x82\x94\x6c\x88\x1f\x07\x3c\x8a\x2b\x89\x5c\xd5\xd5\xe3\xe4\xb9\x01\x6e\xf2\xb5\xb8\x43\xdb\xe8\x35\xa0\x9b\xac\x3d\xcb\xf2\x86\xfc\xdb\xcf\xf2\xbc\x1e\xc9\xf0\x32\x1c\x2d\x26\x04\xcb\xfb\xa6\xfe\x1f\xbe\xa6\xcd\x24\xa5\xa4\x29\x6a\xe3\x1b\x06\x79\xc3\x4f\x7c\x34\x11\xb5\x62\xc1\xae\x75\x2d\x0b\x1a\xe5\xfc\x03\x58\xb0\xf9\x84\xaa\x49\x7a\x19\xd0\x40\x44\x62\xd8\xd7\x92\x9b\xdb\x42\xdf\xef\x22\xb5\xe6\xa6\x68\xba\xed\x8d\x41\x7e\x0b\xf8\xe0\x50\x51\x9e\x75\x5e\xbd\x0c\xe2\x91\xef\xb7\xd9\x79\x1c\x06\xbb\x51\x3b\x11\xd6\x77\xfd\xbc\xb6\x4e\x97\xd4\xf3\xf6\x92\x7c\x8d\x25\xd2\xfa\xc4\x1d\x70\x83\xc0\x69\xe2\xc0\x82\x86\x38\x29\x54\x07\xac\x41\x55\xa0\x1f\xd7\xa7\xad\x46\x54\xd7\xb5\x01\x7c\xe0\x25\x8d\x90\x2b\xe1\xfa\x25\x5f\x29\x74\x6c\xb8\x48\xd2\xf9\x94\x16\xcb\x8c\xd0\xf1\x21\xb0\xf3\xb8\xaf\xff\x5b\xa5\xdb\x97\x1f\xc1\x68\x5e\xc2\x62\x1f\x0b\xe1\x1a\x3d\x76\x9e\x4c\xba\xd9\x75\x47\x80\x5f\xba\x78\x33\xdf\x0e\x20\xd5\xad\x88\xa6\x3b\xc2\xfd\xbe\x7e\x24\x26\x69\x1d\xa4\x7d\xf8\xef\xda\x3a\xa8\x6a\xd7\x31\xb3\x71\x34\x09\xb3\xf0\x4b\x1a\xce\xa8\x26\x51\xe4\x0e\xca\xa2\x3f\xd8\x72\x0c\xca\xf6\xe3\xb6\xa0\x72\x53\x72\xe3\x36\x15\x57\xce\x7e\xdb\x09\xcf\x06\xec\x71\x1c\x0c\xd3\x56\x88\x0f\x94\x51\x90\x5c\x86\xdb\xbf\x26\x41\x1a\x52\xd7\xde\x3d\x0b\x66\x17\x93\x70\x94\x7d\x5c\xcc\xd3\xc7\x43\x0a\x01\x21\x69\xa1\xff\x25\x01\xfe\x65\x83\x78\x12\xce\x46\xd9\x5f\x4c\xe3\x33\x2a\xbc\x85\xb0\x95\xe4\x1b\x2c\xa8\x11\x91\x2e\xe0\x84\x93\xc8\x92\xc5\xf9\x7f\x86\xc3\xd4\x7f\x77\xd0\x7d\xc9\xf1\xc2\xfa\x81\x45\x48\x68\xbe\x85\xa0\xd5\x88\x58\x4e\xc0\x96\xae\x1a\xac\xe8\xf7\x41\xae\xcb\x93\x37\xc7\x6f\xd9\x29\x7c\xfc\xd8\x5e\xfc\xf8\xe1\x4f\x5f\x1f\xbd\xa1\x57\xb5\xc3\x3e\x69\xec\x37\x7a\x6d\x1c\xa0\x2a\x5a\x2f\xf7\x5e\x1f\xbd\xe9\xf5\x21\x99\xa6\x57\x09\xdc\x0b\x29\x29\x62\x68\xd5\x1a\xc0\xc2\x2f\x77\x3e\x37\xd3\x49\x02\x5a\x35\xbc\x6f\x8e\xdf\x12\x00\x06\xc9\xc3\x14\x17\x05\xd5\x15\x88\xc7\x43\x38\x7a\x7d\xf0\xc7\x80\x3a\x2e\x3d\xd4\x28\x0c\xb6\xae\x88\xcd\x3e\x0a\x12\xae\x79\x88\xcb\x7b\x9a\xc0\xba\xf7\xda\x25\x9e\x9d\xc2\xa8\xdd\x32\x2f\xc3\xc9\x1c\x74\x85\x6d\xca\xfb\xb4\x59\x6b\xeb\x7c\xfb\xa2\xcc\x2a\x04\xf9\x0b\x95\x1b\x3c\xae\x9f\xc4\x43\x42\x86\x4d\x46\x6e\xe9\xfd\xe6\xf8\x44\xe0\xd3\xce\x6f\x74\x09\x76\x63\x1d\x96\x03\x46\x74\x19\xa9\xd3\x94\x67\x52\x49\xfb\x69\xac\xd9\xfc\xbd\x79\x39\x1a\x27\x96\x4d\x3b\xd0\xbb\x16\x0f\x60\xde\xae\xab\xe0\x68\x33\xf1\x9b\x39\xca\xe5\x9e\x15\x2b\x85\xc5\x2e\xa3\x65\xc9\x87\xe8\x2a\xfb\x14\xc6\xd1\xf8\xda\xbf\xe3\xd7\x4a\x29\x68\xf5\xd8\xa1\x63\x8b\x24\xcc\x86\x61\x9c\x46\xe3\x68\xd8\xcc\xc9\xed\xa4\x12\xc6\x69\x46\x39\xd6\xec\x93\xcb\xfd\x26\xb4\xf7\x89\x77\x50\x61\xc9\x3e\x84\xd7\x7f\x75\x7f\x8b\x1b\x7f\xdd\xc6\x96\x37\x9e\x06\x42\xb4\xb6\xef\x3d\xf9\xe6\xd5\xe1\xe1\xa0\xd9\xac\xf2\x66\x3b\xf6\xa9\xcd\x15\xa0\x8f\xd8\x2d\xb1\x36\xde\xf4\xef\x3d\x0a\xed\x1e\xbc\xf3\xd7\xef\xdb\x1a\x46\x31\xf8\xe7\x77\x42\xa0\xe4\x8e\x8d\xe3\xf9\xd4\x1b\x39\xf5\x4a\x34\x4d\xb4\xf1\xa5\x2a\xa0\x1b\x0a\xdb\x6f\x6a\x76\xbf\xa4\x21\x50\x1c\x3e\xb8\xfd\x4a\x72\xe1\x2b\x4e\x23\xd1\x67\xa8\x56\x0e\x95\xf3\x08\x5d\x4d\x82\x68\x96\xa5\xe1\x97\x6d\x6f\xfa\x47\x00\x00\x00\xff\xff\x6d\x3e\xdb\x3d\x2c\x14\x00\x00")

func confAppIniBytes() ([]byte, error) {
	return bindataRead(
		_confAppIni,
		"conf/app.ini",
	)
}

func confAppIni() (*asset, error) {
	bytes, err := confAppIniBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "conf/app.ini", size: 5164, mode: os.FileMode(420), modTime: time.Unix(1495571527, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _confLocaleLocale_enUsIni = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x58\x4b\x8b\xe4\x38\x12\xbe\xfb\x57\xc4\x26\x34\x3b\x03\x4d\xee\x61\x61\x0f\xc3\xf4\x0c\xd5\x35\xfd\x82\x7e\x14\x55\xdd\x0b\x4b\xd3\x08\xa5\x1c\x65\x6b\xcb\x96\xbc\x52\xb8\xb2\xf2\xdf\x2f\x11\x92\x6c\xe5\xa3\x06\xe6\x94\xe9\x88\xef\x53\x48\xf1\xb2\xc2\xdf\x07\xdf\x59\xf7\xa3\x21\x4b\x03\xc2\x2b\xd8\xdc\xd9\xce\xc1\x07\xb7\x69\xa2\xed\x9c\xb2\xee\x48\x36\x47\x0c\x4e\x8f\x02\xfc\x96\xff\xaf\x52\x35\x0d\xda\x60\xef\x87\x16\x03\x23\xfe\xe3\xe7\x00\x45\xb9\xdd\x34\x38\x6a\x3b\xb0\xe2\x0d\xff\xc9\xcf\x17\x49\xa2\xd9\x6e\x9a\x49\xc7\xb8\xf7\xa1\x65\xc5\x4d\xfe\xbf\x4a\x2f\x52\x9d\x35\x08\x05\xb1\xdd\x34\x01\x27\xd4\xa4\x9e\xe3\x5c\xb9\x16\xa8\x47\x88\x7c\x2a\xef\x10\x7a\x0c\x28\xb4\x11\xc7\x1d\x06\x95\x0e\x7b\x9b\x1f\x81\xcf\xdb\x7c\x0f\xd8\xd9\x48\x18\x2a\xbf\xdd\x66\x11\x53\xd3\xbf\x63\xa9\xf3\xa4\xf4\x30\xf8\x3d\xb6\xab\x22\x68\xb2\xde\x81\xf3\x04\x59\xc7\xab\xdf\xfb\x30\xfe\x58\x4f\xc9\xcc\x51\x93\xe9\x6b\x2f\x44\x68\x3d\x46\xf7\x77\x02\x51\xd5\x41\x28\x3c\xeb\x8c\x0f\x01\x0d\x31\xef\x83\x7b\xd4\x83\x6d\x97\x70\x80\x0f\x8b\x97\x2a\xf2\x0e\xd1\x29\xd2\x0f\xe8\xea\x10\x83\x1e\x02\xea\xf6\x00\xa2\x79\x09\xd1\x87\x70\xa8\x58\x01\x23\x86\xc7\x74\xb0\x85\x53\x84\x2f\x61\x1a\x50\x47\x04\xd3\x7b\x1f\x11\xb4\xf3\xd4\xe3\x9a\x18\x47\x5b\x27\xc2\xe0\xd4\x89\xaf\xce\xf6\x9e\x71\x9b\x26\xea\xc7\x94\xb4\xfc\x6b\x7a\xed\x3a\x8c\x9b\xe6\xcd\x51\x9e\xfd\x02\x25\xd3\x30\x04\x1f\xea\x05\x53\x42\xb2\xbb\x35\x6d\x1a\xeb\x56\x04\x8c\x73\x24\xd8\xa5\x94\xf0\xf7\xbf\xc0\x8b\xc8\x91\x89\x48\x64\x5d\x17\xab\xb8\xf3\x79\xa1\xc8\x37\xcd\x3c\xb5\x9a\x50\x4d\xc1\xdf\xdb\x01\x55\x9c\x8d\xc1\x18\x25\x72\x49\x04\xbc\xe7\x16\xb2\xe2\x7e\x1e\x86\x43\xbd\x72\x61\x56\x16\x16\xe2\x62\xa4\xf9\xde\x59\x7a\x22\xe5\x70\x5f\xe1\x3e\xe3\x1e\x3a\x4b\x5b\x7a\xa2\x4d\xc3\x8c\xa8\x8c\x77\x84\x8e\x94\xd1\x8e\x7d\x8a\xe3\x44\x07\x86\x5e\x27\x39\xf8\x7b\x10\x20\x24\x00\x1f\x58\x30\x9b\x46\x3c\xa1\x8e\x56\x11\x47\xf7\x7e\x1e\x5a\x4e\xbb\x15\x9a\x77\xf3\xa3\x69\x31\x9a\x60\x27\x4e\xe9\xd3\x32\xfb\x63\x55\x6d\xb7\xdb\xb4\x3d\x59\xfd\x52\xdf\x78\x9b\xe5\xb0\xb7\xd4\x03\x3e\x11\xba\x68\xbd\xcb\xac\x72\xa6\x13\x52\x39\x52\xae\x5f\xf6\xb2\x9a\x82\x7d\xd4\xb4\x66\x48\x7e\x2e\xda\x79\x37\x58\xb3\x2a\xe5\x71\xd3\xe8\xb6\x65\xc7\xca\xee\xa4\x43\xb4\x2d\x38\xdc\x8b\xa3\x56\xd7\x3f\xda\x23\xdf\xff\xdb\xd6\xce\x2f\xa0\xc1\x46\xaa\x40\x1f\x6d\x14\x97\x67\x5c\x15\x48\x6c\x6d\x0d\x7c\xd3\x5a\x3a\x5f\xad\x63\x4c\x8a\x8b\x75\x96\x54\xc0\xc9\x47\x4b\x3e\x1c\x52\x4e\x5b\x82\x4a\x24\xc0\x12\xc7\x80\xa3\x7f\xc4\x13\xc6\x75\x8a\x79\xd2\x55\xd4\x4d\x63\x38\xc8\x52\x85\x7e\x4a\x9d\xe0\x9a\x25\xd2\xa7\x44\x52\x83\xf9\xbf\xe2\x4e\x33\x4f\xa4\x7c\x58\x93\xec\x76\xb5\x96\xd5\xd8\x72\xdb\x39\xca\x30\x13\x90\xeb\x65\x37\xf8\x9d\x9c\x5c\x0a\x50\x84\xd6\x75\xc0\xe2\x82\xec\x90\x94\x75\x2d\x3e\xad\xb8\x2e\x55\x04\x7c\x60\x71\xc1\x71\xfc\xd0\x51\x3a\x63\xc2\xe9\xb6\x65\x98\x48\x37\x8b\x0b\x5b\x7c\x52\xfb\x60\x09\x15\x05\xc4\x15\xbd\xef\x39\xf2\xac\x61\x12\xeb\x0a\x67\xf0\xfe\x61\x9e\x4e\xe0\x49\x78\x84\xe3\xad\xf6\xa8\xdb\xa3\x9d\x02\x4b\x4e\x11\xca\xf8\x71\xb4\x74\x0e\x84\xa4\x58\xdc\xb4\xc0\x52\x8b\x2a\xda\xe6\xbb\x6e\x47\x7e\x7f\xb7\x3a\xf6\x3b\xaf\x43\xbb\x8d\x87\x48\x38\xaa\x48\x9a\x66\x6e\x3c\x77\xf2\x0c\x9f\xbc\xe3\x58\xc0\x9d\xc8\x2b\x7c\xc9\xba\x2b\x5e\x08\xfe\x28\xf2\x7a\x45\xee\xe3\x41\xcd\x13\x59\x79\x1b\xde\xc9\x33\x7c\x93\xe7\x0a\x67\xe6\x10\xb8\x32\x3b\x1f\xfc\x4c\xd6\x31\xf6\x3a\xc9\xe0\x5d\x91\xc5\x0b\x84\x11\x47\x1f\x0e\x6a\x8e\xba\xab\x39\x9f\x44\x0c\xdf\x58\x5c\x6f\xd8\x93\x1e\x0a\x87\x5f\x13\x46\x93\xbc\x28\xbe\xb2\xa2\xb0\xae\x8a\xa2\x62\x66\x8e\xdf\x91\xb6\x4e\x28\x19\xfc\x25\x4b\x2a\xec\xe4\xad\x23\x5c\x63\x6e\x47\x64\x6f\xde\x24\x31\x7c\x4c\x51\xff\xca\xe2\x73\x0b\x65\x57\x0b\xed\x64\x53\xcf\xf1\xee\x03\x9e\x71\xde\x72\xb6\x9d\xe2\x8b\xe7\x7a\xd4\xd3\x99\xdf\xde\xa3\x9e\xce\xbc\x26\xc8\x73\x07\x08\xf6\x79\x2f\xd4\x2c\xdb\x4a\x9e\xd4\x8c\x0f\xed\xf0\x9c\x0d\xeb\xd4\x1c\xcf\xf0\x0e\xbe\xc5\xe7\x18\x01\xe5\x9e\x70\xba\xab\xdb\x2c\x3e\x65\xf9\xdd\x7f\xd1\x50\x2c\xe8\x2f\xe9\xb1\x42\xed\xbc\x27\xbe\x62\x4d\x5c\x0b\xe6\x61\x71\xd3\xeb\x22\xe7\x5a\x30\x0f\x67\x9e\x4a\xe8\x73\x57\x25\xf4\xf3\xbe\x1a\xe3\xa4\x9d\x8a\x14\x66\x43\x73\xc0\xb8\x18\xfc\x74\x37\x69\x07\x77\x8b\xe2\xcc\xe2\x19\xb3\xce\xd0\x53\xf2\x25\xcb\x46\x9b\x1e\x2f\x9a\xbe\x66\xcd\x9f\xda\x3e\xe3\xd6\xc6\xcf\xe8\x97\x2a\x45\xee\x27\xd6\x75\x6a\x37\x9b\x07\x6e\x6c\x3a\xf6\x8a\xf4\x6e\xc0\x7a\xad\x9b\x02\x83\xd7\x02\x83\xf7\x3a\xf6\xf0\x95\x61\x97\x56\xed\x8c\x1a\x91\x74\xab\x49\xd7\xab\xbc\xbb\x86\x4f\x59\x7c\x89\x25\x57\x4b\x95\x5b\x60\xae\x42\xbe\x8e\x54\x2b\x7c\x91\xdb\x67\xee\x8a\x57\x0b\xe4\xd2\x6a\x0e\xf9\xb5\x6b\x54\x40\x73\x30\x92\xfc\x9f\xf1\x89\x78\x0f\xb7\x49\x52\x61\x07\x1d\x05\x5b\x7a\xa4\x75\x06\xe1\xa3\x8e\x02\xff\x7a\xdc\x28\x53\x07\x5b\xc1\xa9\x71\xbd\xbb\x86\x1b\x3d\xc7\x8b\xc0\x49\xa7\x62\x7a\x16\x59\xcc\x17\x60\xb1\x7c\x8a\xcb\x46\x63\x72\x65\x6a\x2b\xcd\x98\xde\x0d\x5b\x13\x3c\xbf\xed\xaf\xf9\xe7\xab\x8e\x0f\x71\xd1\xe4\xa1\xef\xb3\x1e\x71\x91\x45\xd3\x63\x3b\x8b\x5b\xee\xf2\xdf\x15\xcf\x7e\xca\xee\x92\xc3\x17\xc5\x14\xf0\xd1\x7a\x79\x31\xdd\x94\xbf\x47\x00\x7c\x42\x33\x57\x9d\xf3\x4d\x7a\xce\x5b\x5d\x97\xf1\xf9\x5e\x7d\x3b\x3b\xc7\x49\x75\x93\x24\x15\x86\xaf\xa3\xf0\x0a\xaa\xab\xe7\xba\x75\xd2\x81\x52\x49\x07\x7a\xde\xfe\x62\x9e\xf3\x43\x50\xcd\x77\x3d\x53\xff\xa3\xc9\xd7\x16\xbe\x27\x6a\x63\xfc\x2c\xb7\xe3\x6b\x11\x02\xdf\xc3\xaf\x92\x70\x99\x05\x55\x8f\xd3\xc0\xd3\x64\xec\xf8\x55\x9b\xc7\xa9\x9e\xef\x9d\xda\x41\x5e\xe2\x77\x90\x41\xdb\xf2\x40\xb8\xff\x5b\x13\xbd\xb1\x7a\x50\x7f\x71\x89\xd7\xd6\xb5\x89\xdf\xda\x28\x35\xb8\x2c\x30\x05\x3f\x4e\x72\x6c\x9e\xdf\x5e\x42\xa8\x67\xd0\x5e\x47\xe0\xe9\x0f\x32\xad\xdd\xc2\x4d\x9e\xdb\xbc\x23\x6d\x28\x8d\xc9\x96\x10\xe4\xca\x91\x98\x3e\x6c\xcf\xed\xe4\xf1\x2b\x5b\x49\x43\x16\xdf\x21\xac\xc1\x08\x3a\xe0\x5f\x37\x71\x3c\x8d\x2f\xc3\xf8\x27\x6c\xee\x7d\xe8\xfc\x3a\xde\xbf\x82\xb7\x22\x80\x32\x27\x0b\x00\x57\x00\x2c\x88\x22\xf9\x3d\x7d\xe9\x98\x27\xe5\xfc\x5e\x72\x16\xdb\xf3\xa0\xcc\x13\x3b\x75\xdb\x18\xef\xee\x2d\xcf\x8b\xdc\x55\x64\xaa\x8c\x32\x8c\x14\xd7\x5e\xc9\xac\x50\xa3\xb2\x03\x16\xff\x32\x1e\xc8\xc3\xaf\xbb\xdf\x5e\xc4\x5f\xff\xb1\xfb\xad\x1a\x90\xd1\x3c\xc0\xc1\xcf\x01\xac\xdb\xf9\x27\x99\x7f\xac\x13\xaf\x48\x41\xbd\x68\xa1\xf7\x73\x88\x4c\x37\x7e\x9c\x06\x24\x14\xed\x51\x24\x73\x6d\x6c\x1b\x6d\xc8\x3e\xa2\xe2\x05\xab\x2c\xbd\x62\x29\xe7\xa9\x7c\x2e\x29\x89\x3a\x05\xdf\xdb\x9d\x25\x25\xdf\x83\xb8\x81\xc8\xef\x4d\x16\x63\x7b\x82\x50\xb9\xba\x64\x91\xb2\xb8\x8d\x30\x2d\x04\xde\xa4\x40\xd7\xf3\xe5\x28\xaf\x11\xe6\xc8\x8a\xff\x06\x3b\x5a\x3a\x4b\xd0\x83\x9f\x97\x4f\x0f\x01\xff\x37\x63\xa4\x12\x1b\x39\xc3\xea\xdd\x80\x06\x1d\x0d\x87\x25\xa3\xf6\xda\x12\xfc\x13\x46\xeb\x66\xc2\xc8\x4e\x72\xc0\x33\x81\xee\x34\x9b\xed\x75\x54\xb3\xcb\x61\xc2\xb6\xa4\xec\x7b\x0b\x2f\x62\xb2\x5b\x0a\xab\x42\x65\x5b\xba\x6d\x03\xf7\x9e\x9f\x96\x08\xfe\xbc\x85\x0f\xf7\x0b\x8b\xa7\x63\xde\x8f\xe5\x39\x5f\x5f\xca\x05\x1f\xc0\x61\xf2\x90\x9c\x9f\x61\x9c\x36\xde\xe1\xea\xac\xc1\x9a\x07\xf0\x29\xfa\xbb\x99\xc8\x3b\xd8\xe1\xc0\x39\x98\x38\x65\xcf\xd7\x02\xe4\xb1\xb7\x5a\xef\x90\xc2\x72\xec\xa5\x46\x68\x8c\xa0\xcb\xe4\x9f\x02\xfe\xbc\xd2\x97\x92\x11\x46\x5e\x22\xb1\xab\x6a\xba\x15\xa5\xa4\xc1\x52\x73\x36\x7d\x5f\x51\xc6\xb7\x78\x14\xcd\x70\xec\x0d\xd1\x73\x61\xe0\xd3\x64\x43\x9a\x0e\x79\xc6\x14\xf6\xf6\xc4\x96\xea\x71\x98\x64\xd6\x3f\x3f\x31\x1d\xef\x78\xfd\x76\x46\xde\xab\xd8\x7b\x69\xf6\x65\x7b\x30\xa0\xeb\xa8\xaf\xbe\x79\x0c\x1c\x4e\x49\x91\x7f\x6d\x9b\xff\x07\x00\x00\xff\xff\x14\x54\x78\x25\x12\x15\x00\x00")

func confLocaleLocale_enUsIniBytes() ([]byte, error) {
	return bindataRead(
		_confLocaleLocale_enUsIni,
		"conf/locale/locale_en-US.ini",
	)
}

func confLocaleLocale_enUsIni() (*asset, error) {
	bytes, err := confLocaleLocale_enUsIniBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "conf/locale/locale_en-US.ini", size: 5394, mode: os.FileMode(420), modTime: time.Unix(1495571457, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _confLocaleLocale_frFrIni = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func confLocaleLocale_frFrIniBytes() ([]byte, error) {
	return bindataRead(
		_confLocaleLocale_frFrIni,
		"conf/locale/locale_fr-FR.ini",
	)
}

func confLocaleLocale_frFrIni() (*asset, error) {
	bytes, err := confLocaleLocale_frFrIniBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "conf/locale/locale_fr-FR.ini", size: 0, mode: os.FileMode(420), modTime: time.Unix(1493941287, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"conf/app.ini": confAppIni,
	"conf/locale/locale_en-US.ini": confLocaleLocale_enUsIni,
	"conf/locale/locale_fr-FR.ini": confLocaleLocale_frFrIni,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"conf": &bintree{nil, map[string]*bintree{
		"app.ini": &bintree{confAppIni, map[string]*bintree{}},
		"locale": &bintree{nil, map[string]*bintree{
			"locale_en-US.ini": &bintree{confLocaleLocale_enUsIni, map[string]*bintree{}},
			"locale_fr-FR.ini": &bintree{confLocaleLocale_frFrIni, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

